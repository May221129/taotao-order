<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 整合mybatis： 目的： ① Spring管理所有组件，包括mapper的代理类。 实现通过@Autowired来自动注入mapper 
		② Spring用来管理事务，因为Spring的声明式事务非常强大 -->
	<!-- 创建出SqlSessionFactory对象：这一步相当于SpringIOC一启动，就代替我们去创建SqlSessionFactory对象了。 
		下面的配置，就是取代mybatis的全局配置文件。但一般建议还留下mybatis的全局配置文件， 但配置文件中很多东西都可以不用配置了。 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源： -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定全局配置文件的位置： -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- 指定mapper配置文件的位置（即mybatis的sql映射文件）： -->
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml"></property>
	</bean>
	<!--配置一个可以进行批量执行的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>

	<!-- 扫描指定包下面的Mapper，让这些mapper能够自动注入： base-package:指定mapper接口的包名。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.taotao.store.order.mapper"></property>
	</bean>

</beans>
